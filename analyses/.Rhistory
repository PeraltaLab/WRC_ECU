geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (29.3%)") + ylab("PCoA 2 (14.0%)") +
labs(color = "Crop diversity") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF"))))
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank())
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black")
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black")
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5)
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF"))
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF")) +
geom_point(shape=1, size = 5,colour = "black")
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25))
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm"))
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (29.3%)") + ylab("PCoA 2 (14.0%)")
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (29.3%)") + ylab("PCoA 2 (14.0%)") +
labs(color = "Crop diversity")
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (29.3%)") + ylab("PCoA 2 (14.0%)") +
labs(color = "Crop diversity") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF"))))
rm(list=ls())
setwd("~/GitHub/WRC_FertMowing/analyses")
opar <- par(no.readonly = TRUE)  # Saves plot defaults
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
library(MASS)
library(nlme)
library(nlme)
library(reshape2)
library(nlme)
library(reshape2)
library(vegan)
library(nlme)
library(reshape2)
library(vegan)
library(reshape)
library(lme4)
library(ggplot2)
library(vegan)
library(reshape)
library(lme4)
library(ggplot2)
require("png")
require("png")
require("grid")
PCC <- read.csv("../data/WRC_Importance_final.csv", header=TRUE)
labels(PCC)
treatments <- PCC$treatment
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
sampleREL.dist <- vegdist(decostand((PCC[,-c(1:9)]),method="log"),method="bray")
WRC_pcoa <- cmdscale(sampleREL.dist,k=3,eig=TRUE,add=FALSE)
explainvar3 <- round(WRC_pcoa$eig[3]/sum(WRC_pcoa$eig)*100,1)
explainvar1
explainvar2
explainvar1 <- round(WRC_pcoa$eig[1]/sum(WRC_pcoa$eig)*100,1)
explainvar2 <- round(WRC_pcoa$eig[2]/sum(WRC_pcoa$eig)*100,1)
explainvar3 <- round(WRC_pcoa$eig[3]/sum(WRC_pcoa$eig)*100,1)
explainvar1
explainvar2
explainvar3
pcoap <- merge(as.data.frame(WRC_pcoa$points),PCC$treatment, by=0,all.x=T)
rownames(pcoap) <- rownames(WRC_pcoa$points)
pcoap <- merge(pcoap[,-1],PCC$Year, by=0,all.x=T)
rownames(pcoap) <- rownames(WRC_pcoa$points)
treatments <- PCC$treatment
year <- PCC$Year
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
points <- cbind(as.data.frame(WRC_pcoa$points), treatments, year)
L.centroids <- melt(points, id=c("treatments", "year"), measure.vars = c("V1", "V2", "V3"))
centroids <- cast(L.centroids, ... ~ variable, mean)
centroids <- cast(L.centroids, ... ~ variable, fun.aggregate=c(mean,se))
cex.yr <- 1.2 + (as.numeric(unique(centroids$year)) - 2000) * 0.1
pdf(file="./figures/Plant_PCoA.pdf",
width = 9, height = 3, bg = "white")
pdf(file="./figures/Plant_PCoA.pdf", width = 9, height = 3, bg = "white")
ggsave("../figures/Plant_Rplot.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
par(opar)
layout(matrix(1:4, 1))
par(mar=c(0.5,1,1,0.5), oma=c(5,5,1,1)+0.1)
x.dim <- c((min(centroids$V1_mean)-(max(centroids$V1_mean)*0.15)) ,
(max(centroids$V1_mean)+(max(centroids$V1_mean)*0.15)))
y.dim <- c((min(centroids$V2_mean)-(max(centroids$V2_mean*0.15))),
(max(centroids$V2_mean)+(max(centroids$V2_mean)*0.15)+0.025))
plot(pcoap$V1, pcoap$V2, xlab="",
ylab="",
xlim=x.dim, ylim=y.dim, pch=16, cex=2.0, type="n",xaxt="n",yaxt="n",
cex.lab=1.5, cex.axis=1.2)
axis(side=1, labels = T, las=1, cex = 0.8)
axis(side=2, las=1, cex = 0.8)
abline(h=0, lty="dotted")
abline(v=0, lty="dotted")
box(lwd=2)
arrows(centroids[which(centroids$treatments == "UM/UF"), ]$V1_mean,
y1 = centroids[which(centroids$treatments == "UM/UF"), ]$V2_mean -
centroids[which(centroids$treatments == "UM/UF"), ]$V2_se,
y0 = centroids[which(centroids$treatments == "UM/UF"), ]$V2_mean +
centroids[which(centroids$treatments == "UM/UF"), ]$V2_se,
angle = 90,length=0.05, lwd = 2, code = 3)
PCC <- read.csv("../data/WRC_Importance_final.csv", header=TRUE)
labels(PCC)
treatments <- PCC$treatment
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
adonis = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+(1|BLOCK/QUADRAT..), strata = PCC$treatment, method = "bray", data = PCC, perm=1000)
rm(list=ls())
setwd("~/GitHub/WRC_FertMowing/analyses")
opar <- par(no.readonly = TRUE)  # Saves plot defaults
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
library(MASS)
library(nlme)
library(reshape2)
library(vegan)
library(reshape)
library(lme4)
library(ggplot2)
require("png")
require("grid")
PCC <- read.csv("../data/WRC_Importance_final.csv", header=TRUE)
labels(PCC)
treatments <- PCC$treatment
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
adonis = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+(1|BLOCK/QUADRAT..), strata = PCC$treatment, method = "bray", data = PCC, perm=1000)
adonis = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+(1|BLOCK/QUADRAT..), strata = PCC$treatment, method = "bray", data = PCC, perm=1000)
#incorporating strata to restrict permutation within similar treatment
adonis = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+(1|BLOCK/QUADRAT..), strata = PCC$treatment, method = "bray", data = PCC, perm=1000)
adonis = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+(1|BLOCK/QUADRAT..), strata = PCC$treatment, method = "bray", data = PCC, perm=1000)
adonis2 = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+(1|BLOCK/QUADRAT..), method = "bray", data = PCC, perm=1000)
adonis2
WL.simper <- simper(PCC[,-c(1:9)], group = PCC$Fertilizer
simper <- summary(WL.simper)
WL.simper <- simper(PCC[,-c(1:9)], group = PCC$Fertilizer
simper <- summary(WL.simper)
str(PCC)
WL.simper <- simper(PCC[,-c(1:9)], group = PCC$Fertilizer
simper <- summary(WL.simper)
WL.simper <- simper(PCC[,-c(1:9)], group = PCC$Fertilizer)
simper <- summary(WL.simper)
simper
WL.simper <- simper(PCC[,-c(1:9)], group = PCC$Mowing)
simper
sampleREL.dist <- vegdist(decostand((PCC[,-c(1:9)]),method="log"),method="bray")
WRC_pcoa <- cmdscale(sampleREL.dist,k=3,eig=TRUE,add=FALSE)
explainvar1 <- round(WRC_pcoa$eig[1]/sum(WRC_pcoa$eig)*100,1)
explainvar2 <- round(WRC_pcoa$eig[2]/sum(WRC_pcoa$eig)*100,1)
explainvar3 <- round(WRC_pcoa$eig[3]/sum(WRC_pcoa$eig)*100,1)
pcoap <- merge(as.data.frame(WRC_pcoa$points),PCC$treatment, by=0,all.x=T)
rownames(pcoap) <- rownames(WRC_pcoa$points)
pcoap <- merge(pcoap[,-1],PCC$Year, by=0,all.x=T)
rownames(pcoap) <- rownames(WRC_pcoa$points)
treatments <- PCC$treatment
year <- PCC$Year
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
points <- cbind(as.data.frame(WRC_pcoa$points), treatments, year)
L.centroids <- melt(points, id=c("treatments", "year"), measure.vars = c("V1", "V2", "V3"))
centroids <- cast(L.centroids, ... ~ variable, mean)
centroids <- cast(L.centroids, ... ~ variable, fun.aggregate=c(mean,se))
cex.yr <- 1.2 + (as.numeric(unique(centroids$year)) - 2000) * 0.1
par(opar)
layout(matrix(1:4, 1))
par(mar=c(0.5,1,1,0.5), oma=c(5,5,1,1)+0.1)
x.dim <- c((min(centroids$V1_mean)-(max(centroids$V1_mean)*0.15)) ,
(max(centroids$V1_mean)+(max(centroids$V1_mean)*0.15)))
y.dim <- c((min(centroids$V2_mean)-(max(centroids$V2_mean*0.15))),
(max(centroids$V2_mean)+(max(centroids$V2_mean)*0.15)+0.025))
plot(pcoap$V1, pcoap$V2, xlab="",
ylab="",
xlim=x.dim, ylim=y.dim, pch=16, cex=2.0, type="n",xaxt="n",yaxt="n",
cex.lab=1.5, cex.axis=1.2)
axis(side=1, labels = T, las=1, cex = 0.8)
axis(side=2, las=1, cex = 0.8)
plot(pcoap$V1, pcoap$V2, xlab="",
ylab="",
xlim=x.dim, ylim=y.dim, pch=16, cex=2.0, type="n",xaxt="n",yaxt="n",
cex.lab=1.5, cex.axis=1.2)
axis(side=1, labels = T, las=1, cex = 0.8)
axis(side=2, labels = F, las=1, cex = 0.8)
plot(pcoap$V1, pcoap$V2, xlab="",
ylab="",
xlim=x.dim, ylim=y.dim, pch=16, cex=2.0, type="n",xaxt="n",yaxt="n",
cex.lab=1.5, cex.axis=1.2)
axis(side=1, las=1, cex = 0.8)
plot(pcoap$V1, pcoap$V2, xlab="",
ylab="",
xlim=x.dim, ylim=y.dim, pch=16, cex=2.0, type="n",xaxt="n",yaxt="n",
cex.lab=1.5, cex.axis=1.2)
axis(side=1, las=1, cex = 0.8)
adonis = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+(1|BLOCK/QUADRAT..), strata = PCC$treatment, method = "bray", data = PCC, perm=1000)
adonis
sampleREL.dist <- vegdist(decostand((PCC[,-c(1:9)]),method="log"),method="bray")
WRC_pcoa <- cmdscale(sampleREL.dist,k=3,eig=TRUE,add=FALSE)
explainvar2 <- round(WRC_pcoa$eig[2]/sum(WRC_pcoa$eig)*100,1)
explainvar3 <- round(WRC_pcoa$eig[3]/sum(WRC_pcoa$eig)*100,1)
explainvar1 <- round(WRC_pcoa$eig[1]/sum(WRC_pcoa$eig)*100,1)
pcoap <- merge(as.data.frame(WRC_pcoa$points),PCC$treatment, by=0,all.x=T)
rownames(pcoap) <- rownames(WRC_pcoa$points)
pcoap <- merge(pcoap[,-1],PCC$Year, by=0,all.x=T)
rownames(pcoap) <- rownames(WRC_pcoa$points)
treatments <- PCC$treatment
year <- PCC$Year
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
points <- cbind(as.data.frame(WRC_pcoa$points), treatments, year)
L.centroids <- melt(points, id=c("treatments", "year"), measure.vars = c("V1", "V2", "V3"))
centroids <- cast(L.centroids, ... ~ variable, mean)
centroids <- cast(L.centroids, ... ~ variable, fun.aggregate=c(mean,se))
cex.yr <- 1.2 + (as.numeric(unique(centroids$year)) - 2000) * 0.1
pdf(file="./figures/Plant_PCoA.pdf", width = 9, height = 3, bg = "white")
pdf(file="./figures/Plant_PCoA_v2.pdf", width = 9, height = 3, bg = "white")
rm(list=ls())
setwd("~/GitHub/WRC_FertMowing/analyses")
opar <- par(no.readonly = TRUE)  # Saves plot defaults
# Add Summary Functions
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
library(MASS)
library(nlme)
library(reshape2)
library(vegan)
library(reshape)
library(lme4)
library(ggplot2)
require("png")
require("grid")
PCC <- read.csv("../data/WRC_Importance.csv", header=TRUE)
labels(PCC)
treatments <- PCC$treatment
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
PCC.dist <- vegdist(PCC[,-c(1:9)], method="bray")
PCC.ditch <-subset(PCC, Ditch ==1)
PCC.dist.ditch <- vegdist(PCC.ditch[,-c(1:9)], method="bray")
mod <- betadisper(PCC.dist.ditch, PCC.ditch$treatment)
mod <- betadisper(PCC.dist.ditch, PCC.ditch$treatment)
mod
anova(mod)
permutest(mod, pairwise = TRUE)
(mod.HSD <- TukeyHSD(mod))
plot <- plot(mod.HSD)
plot
plot
plot(mod.HSD)
plot
png("../figures/BetaDisp_ditch.png", width = 4, height = 4, res = 300)
dev.off()
plot(mod.HSD)
PCC.NOditch <-subset(PCC, Ditch ==0)
PCC.dist.NOditch <- vegdist(PCC.NOditch[,-c(1:9)], method="bray")
mod <- betadisper(PCC.dist.NOditch, PCC.NOditch$treatment)
mod
anova(mod)
permutest(mod, pairwise = TRUE)
(mod.HSD <- TukeyHSD(mod))
plot(mod.HSD)
plot(mod.HSD)
rm(list=ls())
setwd("~/GitHub/WRC_FertMowing/analyses")
opar <- par(no.readonly = TRUE)  # Saves plot defaults
# Add Summary Functions
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
library(MASS)
library(nlme)
library(reshape2)
library(vegan)
library(reshape)
library(lme4)
library(ggplot2)
require("png")
require("grid")
PCC <- read.csv("../data/WRC_Importance.csv", header=TRUE)
labels(PCC)
treatments <- PCC$treatment
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
PCC.ditch <-subset(PCC, Ditch ==1)
PCC.dist.ditch <- vegdist(PCC.ditch[,-c(1:9)], method="bray")
mod <- betadisper(PCC.dist.ditch, PCC.ditch$treatment)
mod
anova(mod)
permutest(mod, pairwise = TRUE)
(mod.HSD <- TukeyHSD(mod))
plot <- plot(mod.HSD)
plot(mod.HSD)
PCC.NOditch <-subset(PCC, Ditch ==0)
PCC.dist.NOditch <- vegdist(PCC.NOditch[,-c(1:9)], method="bray")
mod <- betadisper(PCC.dist.NOditch, PCC.NOditch$treatment)
mod <- betadisper(PCC.dist.NOditch, PCC.NOditch$treatment)
mod
anova(mod)
permutest(mod, pairwise = TRUE)
(mod.HSD <- TukeyHSD(mod))
plot(mod.HSD)
design.type <- PCC.NOditch$treatment
dataREL <- PCC.NOditch[, colSums(PCC.NOditch) > 0.05]
design.type <- PCC.NOditch$treatment
PCC.NOditch <- PCC.NOditch[,-c(1:9)]
PCC.NOditch.rel <- PCC.NOditch[,-c(1:9)]
PCC.NOditch <-subset(PCC, Ditch ==0)
PCC.dist.NOditch <- vegdist(PCC.NOditch[,-c(1:9)], method="bray")
mod <- betadisper(PCC.dist.NOditch, PCC.NOditch$treatment)
mod <- betadisper(PCC.dist.NOditch, PCC.NOditch$treatment)
mod
design.type <- PCC.NOditch$treatment
PCC.NOditch.rel <- PCC.NOditch[,-c(1:9)]
dataREL <- PCC.NOditch.rel[, colSums(PCC.NOditch.rel) > 0.05]
bac.ind <- indval(dataREL, design.type)
library("labdsv")
bac.ind <- indval(dataREL, design.type)
levels(design.type)
summary(bac.ind)
design.type <- PCC.NOditch$treatments
PCC.NOditch.rel <- PCC.NOditch[,-c(1:9)]
dataREL <- PCC.NOditch.rel[, colSums(PCC.NOditch.rel) > 0.05]
bac.ind <- indval(dataREL, design.type)
rm(list=ls())
setwd("~/GitHub/WRC_FertMowing/analyses")
opar <- par(no.readonly = TRUE)  # Saves plot defaults
# Add Summary Functions
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
library(MASS)
library(nlme)
library(reshape2)
library(vegan)
library(reshape)
library(lme4)
library(ggplot2)
require("png")
require("grid")
PCC <- read.csv("../data/WRC_Importance.csv", header=TRUE)
labels(PCC)
treatments <- PCC$treatment
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
PCC.NOditch <-subset(PCC, Ditch ==0)
PCC.dist.NOditch <- vegdist(PCC.NOditch[,-c(1:9)], method="bray")
mod <- betadisper(PCC.dist.ditch, PCC.ditch$treatment)
PCC.ditch <-subset(PCC, Ditch ==1)
PCC.dist.ditch <- vegdist(PCC.ditch[,-c(1:9)], method="bray")
mod <- betadisper(PCC.dist.ditch, PCC.ditch$treatment)
mod
anova(mod)
permutest(mod, pairwise = TRUE)
(mod.HSD <- TukeyHSD(mod))
plot(mod.HSD)
PCC.NOditch <-subset(PCC, Ditch ==0)
PCC.dist.NOditch <- vegdist(PCC.NOditch[,-c(1:9)], method="bray")
mod <- betadisper(PCC.dist.NOditch, PCC.NOditch$treatment)
mod <- betadisper(PCC.dist.NOditch, PCC.NOditch$treatment)
mod
mod
anova(mod)
permutest(mod, pairwise = TRUE)
(mod.HSD <- TukeyHSD(mod))
plot(mod.HSD)
library("labdsv")
design.type <- PCC.NOditch$treatments
PCC.NOditch.rel <- PCC.NOditch[,-c(1:9)]
dataREL <- PCC.NOditch.rel[, colSums(PCC.NOditch.rel) > 0.05]
bac.ind <- indval(dataREL, design.type)
design.type <- PCC.NOditch$levels(treatments)
cbind(PCC,treatments)
PCC <- read.csv("../data/WRC_Importance.csv", header=TRUE)
labels(PCC)
treatments <- PCC$treatment
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
cbind(treatments,PCC)
PCC.trts <- cbind(treatments,PCC)
PCC.ditch <-subset(PCC.trts, Ditch ==1)
str(PCC.ditch)
PCC.dist.ditch <- vegdist(PCC.ditch[,-c(1:10)], method="bray")
mod <- betadisper(PCC.dist.ditch, PCC.ditch$treatment)
anova(mod)
permutest(mod, pairwise = TRUE)
(mod.HSD <- TukeyHSD(mod))
plot(mod.HSD)
PCC.NOditch <-subset(PCC.trts, Ditch ==0)
PCC.dist.NOditch <- vegdist(PCC.NOditch[,-c(1:10)], method="bray")
mod <- betadisper(PCC.dist.NOditch, PCC.NOditch$treatment)
mod
anova(mod)
permutest(mod, pairwise = TRUE)
(mod.HSD <- TukeyHSD(mod))
plot(mod.HSD)
library("labdsv")
design.type <- PCC.NOditch$treatments
mod <- betadisper(PCC.dist.NOditch, PCC.NOditch$treatments)
mod
anova(mod)
permutest(mod, pairwise = TRUE)
(mod.HSD <- TukeyHSD(mod))
design.type <- PCC.NOditch$treatments
PCC.NOditch.rel <- PCC.NOditch[,-c(1:9)]
dataREL <- PCC.NOditch.rel[, colSums(PCC.NOditch.rel) > 0.05]
bac.ind <- indval(dataREL, design.type)
levels(design.type)
plant.ind <- indval(dataREL, design.type)
levels(design.type)
summary(plant.ind)
inds <- which(bac.ind$pval <= 0.05)
bac.indicators <- as.data.frame(matrix(NA, nrow = length(inds), ncol = 4))
colnames(bac.indicators) <- c("Species", "Cluster", "IndVal", "Prob")
bac.indicators$Speces <- names(inds)
inds <- which(plant.ind$pval <= 0.05)
plant.indicators <- as.data.frame(matrix(NA, nrow = length(inds), ncol = 4))
colnames(plant.indicators) <- c("Species", "Cluster", "IndVal", "Prob")
plant.indicators$Species <- names(inds)
plant.indicators$Cluster <- bac.ind$maxcls[inds]
plant.indicators$IndVal <- bac.ind$indcls[inds]
plant.indicators$Prob <- bac.ind$pval[inds]
levels(design.type)
write.table(indicator.bac, "../data/PlantIndicators_NOditch.txt",
sep="\t", row.names = F, quote = F)
indicator.plant <- cbind(plant.indicators)
indicator.plant <- cbind(plant.indicators)
levels(design.type)
write.table(indicator.plant, "../data/PlantIndicators_NOditch.txt",
sep="\t", row.names = F, quote = F)
design.type <- PCC.ditch$treatments
PCC.ditch.rel <- PCC.ditch[,-c(1:10)]
dataREL <- PCC.ditch.rel[, colSums(PCC.ditch.rel) > 0.05]
plant.ind <- indval(dataREL, design.type)
levels(design.type)
summary(plant.ind)
inds <- which(plant.ind$pval <= 0.05)
plant.indicators <- as.data.frame(matrix(NA, nrow = length(inds), ncol = 4))
colnames(plant.indicators) <- c("Species", "Cluster", "IndVal", "Prob")
plant.indicators$Species <- names(inds)
plant.indicators$Cluster <- bac.ind$maxcls[inds]
plant.indicators$IndVal <- bac.ind$indcls[inds]
plant.indicators$Prob <- bac.ind$pval[inds]
indicator.plant <- cbind(plant.indicators)
levels(design.type)
write.table(indicator.plant, "../data/PlantIndicators_Ditch.txt",
sep="\t", row.names = F, quote = F)
PCC.NOditch <-subset(PCC.trts, Ditch ==0)
PCC.dist.NOditch <- vegdist(PCC.NOditch[,-c(1:10)], method="bray")
mod <- betadisper(PCC.dist.NOditch, PCC.NOditch$treatments)
mod
design.type <- PCC.NOditch$treatments
PCC.NOditch.rel <- PCC.NOditch[,-c(1:10)]
dataREL <- PCC.NOditch.rel[, colSums(PCC.NOditch.rel) > 0.05]
plant.ind <- indval(dataREL, design.type)
plant.ind <- indval(dataREL, design.type)
levels(design.type)
levels(design.type)
summary(plant.ind)
inds <- which(plant.ind$pval <= 0.05)
plant.indicators <- as.data.frame(matrix(NA, nrow = length(inds), ncol = 4))
colnames(plant.indicators) <- c("Species", "Cluster", "IndVal", "Prob")
plant.indicators$Species <- names(inds)
plant.indicators$Cluster <- bac.ind$maxcls[inds]
plant.indicators$IndVal <- bac.ind$indcls[inds]
plant.indicators$Prob <- bac.ind$pval[inds]
indicator.plant <- cbind(plant.indicators)
levels(design.type)
write.table(indicator.plant, "../data/PlantIndicators_NOditch.txt",
sep="\t", row.names = F, quote = F)
