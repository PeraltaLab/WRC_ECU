}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan")
require("dplyr")
require("dplyr")
require("nlme")
require("BiodiversityR")  # Is this needed?
require("ecodist")
require("ggplot2")
require("ade4")
require("png")
design <- read.csv("../data/CSI_Design_ENV_NoSourceTanks.csv", row.names=1)
head(design)
str(design)
design_crobes <- read.csv("../data/design_CSI.csv", row.names=1)
design_crobes <- design_crobes[-c(grep("mock community", design_crobes$CSI_ID)), ]
dim(design_crobes)
CSIdata.in <- read.otu("../data/CSI.shared")
CSIdata.in <- read.otu("../data/CSI.shared")
dim(CSIdata.in)
missing <- setdiff(rownames(design_crobes), rownames(CSIdata.in))
design_crobes <- design_crobes[-(which(rownames(design_crobes) == missing)), ]
dim(design_crobes)
design <- design[-(which(rownames(design) == missing)), ]
dim(design) #92,15
temp <- rownames(design_crobes[which(design_crobes$Number %in% c(1, 2, 3)), ])
temp <- rownames(design_crobes[which(design_crobes$Number %in% c(1, 2, 3)), ])
bac.design <- design_crobes[-(which(rownames(design_crobes) %in% temp)), ]
design_crobes2 <- droplevels(bac.design)
dim(design_crobes2)
CSIdata.in2 <- CSIdata.in[-(which(rownames(CSIdata.in) %in% temp)), ]
dim(CSIdata.in2)
CSIdat.a <- CSIdata.in2[, which(colSums(CSIdata.in2) >= 2)]
dim(CSIdat.a)
CSIdat.b <- CSIdat.a[which(rowSums(CSIdat.a) >= 13000), ]
dim(CSIdat.b)
odd.sites <- c("CSI101")
CSIdata.in3 <- CSIdat.b[setdiff(rownames(CSIdat.b), odd.sites), ]
design2 <- design[setdiff(rownames(design), odd.sites), ]
all.equal(rownames(design2), rownames(CSIdata.in3))
treatments1 <- as.factor(design2$Salinity)
levels(treatments1) <- c("0","5","9","13")
treatments2 <- as.factor(design2$Dispersal)
levels(treatments2) <- c("2","3")
date_1 <- as.factor(design2$Date2)
CSIdataPA <- (CSIdata.in3 > 0) * 1
CSIdataREL <- CSIdata.in3
for(i in 1:dim(CSIdata.in3)[1]){
CSIdataREL[i,] <- CSIdata.in3[i,]/sum(CSIdata.in3[i,])
}
CSI.tax1 <- read.tax(taxonomy = "../data/CSI.0.03.cons.taxonomy")
points <- cbind(as.data.frame(BD_pcoa$points), treatments)
L.centroids <- melt(points, id="treatments", measure.vars = c("V1", "V2"))
centroids <- cast(L.centroids, variable ~ treatments, mean)
centroids.se <- cast(L.centroids, variable ~ treatments, se)
sampleREL.dist <- vegdist(BDdataREL, method="bray")
# Import Environmental Data
design.in <- read.csv("../data/BDsoil_exptdesign.csv", row.names = 1)
# ID S and W treatments
SnW <- rownames(design.in[which(design.in$rotation == "S" |
design.in$rotation == "W"), ])
# Remove S and W treatments
design <- design.in[-(which(rownames(design.in) %in% SnW)), ]
design <- droplevels(design)
# Define Treatments
treatments <- design$rotation
levels(treatments) <- c("fallow", "CSW-2cov", "CSW-1cov", "CSW",
"CS", "C-1cov", "C")
# Import OTU data
# Import Raw Data
BDdata.in <- read.otu("../data/BD.shared")
# Remove Mock Community, Blank and Undetermined
BDdata.in2 <- BDdata.in[grepl("BD[0-9][0-9]", rownames(BDdata.in)), ]
# Remove S and W Treatments
SnW2 <- gsub("-", "", SnW)
BDdata.in2 <- BDdata.in2[-(which(rownames(BDdata.in2) %in% SnW2)), ]
# Remove OTUs with less than two occurences across all sites
BDdata <- BDdata.in2[, which(colSums(BDdata.in2) >= 2)]
# Make Presence Absence Matrix
BDdataPA <- (BDdata > 0) * 1
# Make Relative Abundence Matrices
BDdataREL <- BDdata
for(i in 1:dim(BDdata)[1]){
BDdataREL[i,] <- BDdata[i,]/sum(BDdata[i,])
}
# Log Transform Relative Abundances
BDdataREL.log <- decostand(BDdataREL, method="log")
# Import Taxonomy File
BD.tax <- read.tax(taxonomy = "../data/BD.0.03.cons.taxonomy")
BDveg.in <- read.csv("../data/BDveg.csv", row.names = 1)
# Remove S and W Treatments
BDveg <- BDveg.in[-(which(rownames(BDveg.in) %in% SnW)), ]
# plant data as discrete and continuous biomass data: rotation	crop_numb	covercrop_g	weeds_g	crop_g	biomass_total	covercrop_prop	weeds_prop	crop_prop
# Rarefy Abundances (min abundance is 267,170. We sampling to 200,000)
min(rowSums(BDdata))
BDdata.r <- rrarefy(BDdata, 200000)
# Fisher's Alpha
fisher <- fisher.alpha(BDdata.r)
fisher
# Species Richness
richness <- rowSums((BDdata.r >= 1))
# Shannon Diversity (my function gets the same answer)
shannon <- diversity(BDdata.r, "shannon")
# Simpson's Evenness
simp.even <- apply(BDdata.r, 1, simp_even)
# Alternative way for evenness (note: uses D = sum[p_i^2] not corrected D)
#simp.even2 <- diversity(BDdata.r, "invsimpson")/specnumber(BDdata.r)
#Pielouâ€™s evenness
J <- shannon/log(specnumber(BDdata.r[,-c(1:1)]))
#combined richness, diversity, evenness
BD.DIVsoilmicrobes <- cbind(design,richness,shannon,simp.even,J)
write.table(BD.DIVsoilmicrobes, file="BD.DIVsoilmicrobes.csv", sep=",", col.names=NA)
# Hypothesis Testing
# First Check the order
length(design$rotation) == length(fisher)
all.equal(gsub("-", "", rownames(design)), names(fisher))
fisher.lm <- lme(fisher ~ rotation, random = ~1|block, data = design)
anova(fisher.lm)
richness.lm <- lme(richness ~ rotation, random = ~1|block, data = design)
anova(richness.lm)
evenness.lm <- lme(simp.even ~ rotation, random = ~1|block, data = design)
anova(evenness.lm)
shannon.lm <- lme(shannon ~ rotation, random = ~1|block, data = design)
anova(shannon.lm)
library(agricolae)
summary(shannon.lm)
shannon.lm2 <- lm(shannon ~ rotation, data = BD.DIVsoilmicrobes)
HSD <- HSD.test(shannon.lm2,"rotation", console=TRUE)
p <- ggplot(BD.DIVsoilmicrobes, aes(rotation,shannon))
p + geom_boxplot() + theme_bw()
p + geom_boxplot() + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor =     element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14),
axis.text.x = element_text(vjust=0.65, hjust=0.5, angle=30, size=14), panel.border =
element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("Crop Diversity") + ylab("Shannon Diversity Index (H')") +
scale_x_discrete(breaks=c("fallow", "CSW-2cov", "CSW-1cov", "CSW", "CS", "C-1cov", "C"),
labels=c("fallow", "CSW_2cov", "CSW_1cov", "CSW", "CS","C_1cov", "mC"))
ggsave("shannonRplot.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
data.prnd <- read.csv("../data/PRND gene_NoSW.csv", header=TRUE)
prnd.lm <- lme(copies ~ Rotation, random = ~1|Block, data = data.prnd)
anova(prnd.lm)
library(agricolae)
prnd.lm2 <- lm(copies~Rotation,data=data.prnd)
summary(prnd.lm2)
HSD <- HSD.test(prnd.lm2,"Rotation", console=TRUE)
p <- ggplot(data.prnd, aes(Rotation,copies))
p + geom_boxplot() + theme_bw()
p + geom_boxplot() + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, angle=30, size=14), panel.border = element_rect(colour = "black",size=1.25)) + theme(axis.ticks.length=unit(0.3,"cm")) + xlab("Crop Diversity") + ylab("Log copy number of prnD gene/g soil") +scale_x_discrete(breaks=c("fallow", "CSW-2cov", "CSW-1cov", "CSW", "CS", "C-1cov", "C"), labels=c("fallow", "CSW_2cov", "CSW_1cov", "CSW", "CS","C_1cov", "mC"))
ggsave("prnDabundanceRplot.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
reg <- lm(copies~crop+carbon+moisture, data=data.prnd)
summary(reg)
# Check that Bac and Plant data have same structure as design
row.names(BDdataREL) == row.names(design)
#PERMANOVA on rotation effect - no S and W
new.data <-cbind(design,BDdataREL)
adonis = adonis(new.data[,-c(1:15)] ~ rotation+block, method = "bray", data = new.data, perm=1000)
adonis
#png(filename="../figures/WL.bac.PCoA.png",
#width = 1200, height = 800, res = 96*2)
# Create Distance Matrix
sampleREL.dist <- vegdist(BDdataREL, method="bray")
# Principal Coordinates Analysis
BD_pcoa <- cmdscale(sampleREL.dist, k=3, eig=TRUE, add=FALSE)
# Classical (Metric) Multidimensional Scaling; returns PCoA coordinates
# eig=TRUE returns eigenvalues; k = # of dimensions to calculate
explainvar1 <- round(BD_pcoa$eig[1] / sum(BD_pcoa$eig), 3) * 100
explainvar2 <- round(BD_pcoa$eig[2] / sum(BD_pcoa$eig), 3) * 100
sum.eig <- sum(explainvar1, explainvar2)
points <- cbind(as.data.frame(BD_pcoa$points), treatments)
L.centroids <- melt(points, id="treatments", measure.vars = c("V1", "V2"))
centroids <- cast(L.centroids, variable ~ treatments, mean)
centroids.se <- cast(L.centroids, variable ~ treatments, se)
centroids.sd <- cast(L.centroids, variable ~ treatments, sd)
cent.dataframe <- t(data.frame(rbind(centroids[1,-1], centroids[2,-1],
centroids.sd[1,-1],centroids.sd[2,-1])))
colnames(cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
cent.treats <- rownames(cent.dataframe)
explainvar1 #Include in PCoA 1 axis label 29.3%
explainvar2 #Include in PCoA 2 axis label 14.0%
df <- as.data.frame(cent.dataframe)
p <- ggplot(df, aes(x=V1, y=V2, colour=cent.treats)) + theme_bw()
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (29.3%)") + ylab("PCoA 2 (14.0%)") +
labs(color = "Crop diversity") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF"))))
ggsave("16SrRNA_BCC_Rplot.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
new.data <- new.data[complete.cases(new.data),]
soil.factors <- new.data[,7:15]
cor(soil.factors)
#in soil model, include GWC, Total.C, ammonium, nitrate, pH, sand; note: GWC correlated to texture and Total.C, but included anyway
adonis = adonis(new.data[,-c(1:15)] ~ GWC + Total.C + Total.N + NH4 + NO3 + pHH2O + Clay + Silt + Sand, method = "bray", data = new.data, perm=1000)
adonis
# Terms added sequentially (first to last)
adonis = adonis(new.data[,-c(1:15)] ~ Sand + GWC + Total.C + Total.N + NH4 + NO3 + pHH2O + Clay + Silt, method = "bray", data = new.data, perm=1000)
adonis
# Terms added sequentially (first to last)
adonis = adonis(new.data[,-c(1:15)] ~ Silt + Sand  + GWC + Total.C + Total.N + NH4 + NO3 + pHH2O + Clay, method = "bray", data = new.data, perm=1000)
adonis
# Terms added sequentially (first to last)
adonis = adonis(new.data[,-c(1:15)] ~ Clay + Silt + Sand  + GWC + Total.C + Total.N + NH4 + NO3 + pHH2O, method = "bray", data = new.data, perm=1000)
adonis
# Terms added sequentially (first to last)
adonis = adonis(new.data[,-c(1:15)] ~ pHH2O + Clay + Silt + Sand  + GWC + Total.C + Total.N + NH4 + NO3, method = "bray", data = new.data, perm=1000)
adonis
# Terms added sequentially (first to last)
adonis = adonis(new.data[,-c(1:15)] ~ NO3 + pHH2O + Clay + Silt + Sand  + GWC + Total.C + Total.N + NH4, method = "bray", data = new.data, perm=1000)
adonis
# Terms added sequentially (first to last)
adonis = adonis(new.data[,-c(1:15)] ~  NH4 +NO3 + pHH2O + Clay + Silt + Sand  + GWC + Total.C + Total.N, method = "bray", data = new.data, perm=1000)
adonis
# Terms added sequentially (first to last)
adonis = adonis(new.data[,-c(1:15)] ~  Total.N + NH4 +NO3 + pHH2O + Clay + Silt + Sand  + GWC + Total.C, method = "bray", data = new.data, perm=1000)
adonis
# Terms added sequentially (first to last)
adonis = adonis(new.data[,-c(1:15)] ~ Total.C +  Total.N + NH4 +NO3 + pHH2O + Clay + Silt + Sand  + GWC, method = "bray", data = new.data, perm=1000)
adonis
# Terms added sequentially (first to last)
points <- cbind(as.data.frame(BD_pcoa$points), treatments)
L.centroids <- melt(points, id="treatments", measure.vars = c("V1", "V2"))
centroids <- cast(L.centroids, variable ~ treatments, mean)
centroids.se <- cast(L.centroids, variable ~ treatments, se)
centroids.sd <- cast(L.centroids, variable ~ treatments, sd)
cent.dataframe <- t(data.frame(rbind(centroids[1,-1], centroids[2,-1],
centroids.sd[1,-1],centroids.sd[2,-1])))
colnames(cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
cent.treats <- rownames(cent.dataframe)
explainvar1 #Include in PCoA 1 axis label 29.3%
explainvar2 #Include in PCoA 2 axis label 14.0%
df <- as.data.frame(cent.dataframe)
p <- ggplot(df, aes(x=V1, y=V2, colour=cent.treats)) + theme_bw()
p
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (29.3%)") + ylab("PCoA 2 (14.0%)") +
labs(color = "Crop diversity") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF"))))
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank())
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black")
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black")
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5)
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF"))
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF")) +
geom_point(shape=1, size = 5,colour = "black")
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25))
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm"))
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (29.3%)") + ylab("PCoA 2 (14.0%)")
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (29.3%)") + ylab("PCoA 2 (14.0%)") +
labs(color = "Crop diversity")
p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) + theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
geom_point(size=5) +
scale_colour_manual(labels = c("mC", "C_1cov", "CS", "CSW", "CSW_1cov", "CSW_2cov", "fallow"),   values = c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF")) +
geom_point(shape=1, size = 5,colour = "black") +
theme(axis.title=element_text(size=18), axis.text=element_text(size=14), axis.text.x   = element_text(size=14), panel.border = element_rect(colour = "black",size=1.25)) +
theme(axis.ticks.length=unit(0.3,"cm")) +
xlab("PCoA 1 (29.3%)") + ylab("PCoA 2 (14.0%)") +
labs(color = "Crop diversity") +
guides(colour = guide_legend(override.aes = list(pch=21, size = 4, colour="black",
fill=c("#FFFFCC", "#FFFF00", "#FF9933", "#66CC00", "#339900", "#336633", "#00CCFF"))))
rm(list=ls())
setwd("~/GitHub/WRC_FertMowing/analyses")
opar <- par(no.readonly = TRUE)  # Saves plot defaults
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
library(MASS)
library(nlme)
library(nlme)
library(reshape2)
library(nlme)
library(reshape2)
library(vegan)
library(nlme)
library(reshape2)
library(vegan)
library(reshape)
library(lme4)
library(ggplot2)
library(vegan)
library(reshape)
library(lme4)
library(ggplot2)
require("png")
require("png")
require("grid")
PCC <- read.csv("../data/WRC_Importance_final.csv", header=TRUE)
labels(PCC)
treatments <- PCC$treatment
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
sampleREL.dist <- vegdist(decostand((PCC[,-c(1:9)]),method="log"),method="bray")
WRC_pcoa <- cmdscale(sampleREL.dist,k=3,eig=TRUE,add=FALSE)
explainvar3 <- round(WRC_pcoa$eig[3]/sum(WRC_pcoa$eig)*100,1)
explainvar1
explainvar2
explainvar1 <- round(WRC_pcoa$eig[1]/sum(WRC_pcoa$eig)*100,1)
explainvar2 <- round(WRC_pcoa$eig[2]/sum(WRC_pcoa$eig)*100,1)
explainvar3 <- round(WRC_pcoa$eig[3]/sum(WRC_pcoa$eig)*100,1)
explainvar1
explainvar2
explainvar3
pcoap <- merge(as.data.frame(WRC_pcoa$points),PCC$treatment, by=0,all.x=T)
rownames(pcoap) <- rownames(WRC_pcoa$points)
pcoap <- merge(pcoap[,-1],PCC$Year, by=0,all.x=T)
rownames(pcoap) <- rownames(WRC_pcoa$points)
treatments <- PCC$treatment
year <- PCC$Year
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
points <- cbind(as.data.frame(WRC_pcoa$points), treatments, year)
L.centroids <- melt(points, id=c("treatments", "year"), measure.vars = c("V1", "V2", "V3"))
centroids <- cast(L.centroids, ... ~ variable, mean)
centroids <- cast(L.centroids, ... ~ variable, fun.aggregate=c(mean,se))
cex.yr <- 1.2 + (as.numeric(unique(centroids$year)) - 2000) * 0.1
pdf(file="./figures/Plant_PCoA.pdf",
width = 9, height = 3, bg = "white")
pdf(file="./figures/Plant_PCoA.pdf", width = 9, height = 3, bg = "white")
ggsave("../figures/Plant_Rplot.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
par(opar)
layout(matrix(1:4, 1))
par(mar=c(0.5,1,1,0.5), oma=c(5,5,1,1)+0.1)
x.dim <- c((min(centroids$V1_mean)-(max(centroids$V1_mean)*0.15)) ,
(max(centroids$V1_mean)+(max(centroids$V1_mean)*0.15)))
y.dim <- c((min(centroids$V2_mean)-(max(centroids$V2_mean*0.15))),
(max(centroids$V2_mean)+(max(centroids$V2_mean)*0.15)+0.025))
plot(pcoap$V1, pcoap$V2, xlab="",
ylab="",
xlim=x.dim, ylim=y.dim, pch=16, cex=2.0, type="n",xaxt="n",yaxt="n",
cex.lab=1.5, cex.axis=1.2)
axis(side=1, labels = T, las=1, cex = 0.8)
axis(side=2, las=1, cex = 0.8)
abline(h=0, lty="dotted")
abline(v=0, lty="dotted")
box(lwd=2)
arrows(centroids[which(centroids$treatments == "UM/UF"), ]$V1_mean,
y1 = centroids[which(centroids$treatments == "UM/UF"), ]$V2_mean -
centroids[which(centroids$treatments == "UM/UF"), ]$V2_se,
y0 = centroids[which(centroids$treatments == "UM/UF"), ]$V2_mean +
centroids[which(centroids$treatments == "UM/UF"), ]$V2_se,
angle = 90,length=0.05, lwd = 2, code = 3)
PCC <- read.csv("../data/WRC_Importance_final.csv", header=TRUE)
labels(PCC)
treatments <- PCC$treatment
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
adonis = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+(1|BLOCK/QUADRAT..), strata = PCC$treatment, method = "bray", data = PCC, perm=1000)
rm(list=ls())
setwd("~/GitHub/WRC_FertMowing/analyses")
opar <- par(no.readonly = TRUE)  # Saves plot defaults
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
library(MASS)
library(nlme)
library(reshape2)
library(vegan)
library(reshape)
library(lme4)
library(ggplot2)
require("png")
require("grid")
PCC <- read.csv("../data/WRC_Importance_final.csv", header=TRUE)
labels(PCC)
treatments <- PCC$treatment
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
adonis = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+(1|BLOCK/QUADRAT..), strata = PCC$treatment, method = "bray", data = PCC, perm=1000)
adonis = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+(1|BLOCK/QUADRAT..), strata = PCC$treatment, method = "bray", data = PCC, perm=1000)
#incorporating strata to restrict permutation within similar treatment
adonis = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+(1|BLOCK/QUADRAT..), strata = PCC$treatment, method = "bray", data = PCC, perm=1000)
adonis = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+(1|BLOCK/QUADRAT..), strata = PCC$treatment, method = "bray", data = PCC, perm=1000)
adonis2 = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+(1|BLOCK/QUADRAT..), method = "bray", data = PCC, perm=1000)
adonis2
WL.simper <- simper(PCC[,-c(1:9)], group = PCC$Fertilizer
simper <- summary(WL.simper)
WL.simper <- simper(PCC[,-c(1:9)], group = PCC$Fertilizer
simper <- summary(WL.simper)
str(PCC)
WL.simper <- simper(PCC[,-c(1:9)], group = PCC$Fertilizer
simper <- summary(WL.simper)
WL.simper <- simper(PCC[,-c(1:9)], group = PCC$Fertilizer)
simper <- summary(WL.simper)
simper
WL.simper <- simper(PCC[,-c(1:9)], group = PCC$Mowing)
simper
sampleREL.dist <- vegdist(decostand((PCC[,-c(1:9)]),method="log"),method="bray")
WRC_pcoa <- cmdscale(sampleREL.dist,k=3,eig=TRUE,add=FALSE)
explainvar1 <- round(WRC_pcoa$eig[1]/sum(WRC_pcoa$eig)*100,1)
explainvar2 <- round(WRC_pcoa$eig[2]/sum(WRC_pcoa$eig)*100,1)
explainvar3 <- round(WRC_pcoa$eig[3]/sum(WRC_pcoa$eig)*100,1)
pcoap <- merge(as.data.frame(WRC_pcoa$points),PCC$treatment, by=0,all.x=T)
rownames(pcoap) <- rownames(WRC_pcoa$points)
pcoap <- merge(pcoap[,-1],PCC$Year, by=0,all.x=T)
rownames(pcoap) <- rownames(WRC_pcoa$points)
treatments <- PCC$treatment
year <- PCC$Year
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
points <- cbind(as.data.frame(WRC_pcoa$points), treatments, year)
L.centroids <- melt(points, id=c("treatments", "year"), measure.vars = c("V1", "V2", "V3"))
centroids <- cast(L.centroids, ... ~ variable, mean)
centroids <- cast(L.centroids, ... ~ variable, fun.aggregate=c(mean,se))
cex.yr <- 1.2 + (as.numeric(unique(centroids$year)) - 2000) * 0.1
par(opar)
layout(matrix(1:4, 1))
par(mar=c(0.5,1,1,0.5), oma=c(5,5,1,1)+0.1)
x.dim <- c((min(centroids$V1_mean)-(max(centroids$V1_mean)*0.15)) ,
(max(centroids$V1_mean)+(max(centroids$V1_mean)*0.15)))
y.dim <- c((min(centroids$V2_mean)-(max(centroids$V2_mean*0.15))),
(max(centroids$V2_mean)+(max(centroids$V2_mean)*0.15)+0.025))
plot(pcoap$V1, pcoap$V2, xlab="",
ylab="",
xlim=x.dim, ylim=y.dim, pch=16, cex=2.0, type="n",xaxt="n",yaxt="n",
cex.lab=1.5, cex.axis=1.2)
axis(side=1, labels = T, las=1, cex = 0.8)
axis(side=2, las=1, cex = 0.8)
plot(pcoap$V1, pcoap$V2, xlab="",
ylab="",
xlim=x.dim, ylim=y.dim, pch=16, cex=2.0, type="n",xaxt="n",yaxt="n",
cex.lab=1.5, cex.axis=1.2)
axis(side=1, labels = T, las=1, cex = 0.8)
axis(side=2, labels = F, las=1, cex = 0.8)
plot(pcoap$V1, pcoap$V2, xlab="",
ylab="",
xlim=x.dim, ylim=y.dim, pch=16, cex=2.0, type="n",xaxt="n",yaxt="n",
cex.lab=1.5, cex.axis=1.2)
axis(side=1, las=1, cex = 0.8)
plot(pcoap$V1, pcoap$V2, xlab="",
ylab="",
xlim=x.dim, ylim=y.dim, pch=16, cex=2.0, type="n",xaxt="n",yaxt="n",
cex.lab=1.5, cex.axis=1.2)
axis(side=1, las=1, cex = 0.8)
adonis = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+(1|BLOCK/QUADRAT..), strata = PCC$treatment, method = "bray", data = PCC, perm=1000)
adonis
sampleREL.dist <- vegdist(decostand((PCC[,-c(1:9)]),method="log"),method="bray")
WRC_pcoa <- cmdscale(sampleREL.dist,k=3,eig=TRUE,add=FALSE)
explainvar2 <- round(WRC_pcoa$eig[2]/sum(WRC_pcoa$eig)*100,1)
explainvar3 <- round(WRC_pcoa$eig[3]/sum(WRC_pcoa$eig)*100,1)
explainvar1 <- round(WRC_pcoa$eig[1]/sum(WRC_pcoa$eig)*100,1)
pcoap <- merge(as.data.frame(WRC_pcoa$points),PCC$treatment, by=0,all.x=T)
rownames(pcoap) <- rownames(WRC_pcoa$points)
pcoap <- merge(pcoap[,-1],PCC$Year, by=0,all.x=T)
rownames(pcoap) <- rownames(WRC_pcoa$points)
treatments <- PCC$treatment
year <- PCC$Year
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
points <- cbind(as.data.frame(WRC_pcoa$points), treatments, year)
L.centroids <- melt(points, id=c("treatments", "year"), measure.vars = c("V1", "V2", "V3"))
centroids <- cast(L.centroids, ... ~ variable, mean)
centroids <- cast(L.centroids, ... ~ variable, fun.aggregate=c(mean,se))
cex.yr <- 1.2 + (as.numeric(unique(centroids$year)) - 2000) * 0.1
pdf(file="./figures/Plant_PCoA.pdf", width = 9, height = 3, bg = "white")
pdf(file="./figures/Plant_PCoA_v2.pdf", width = 9, height = 3, bg = "white")
